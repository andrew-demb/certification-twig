category: Tests
entities:
  -
    question: 'What will render {% if "John Doe" is even %} Even {% endif %}'
    answers:
      - { value: 'Even', correct: true }
      - { value: 'Nothing', correct: false }
      - { value: 'true', correct: false }
      - { value: 'TwigException', correct: false }
    help: 'https://twig.symfony.com/doc/3.x/tests/even.html'
  -
    question: 'What will render {% if 1 is even %} Even {% endif %}'
    answers:
      - { value: 'false', correct: false }
      - { value: 'Nothing', correct: false }
      - { value: 'Even', correct: true }
      - { value: 'TwigException', correct: false }
    help: 'https://twig.symfony.com/doc/3.x/tests/even.html'
  -
    question: 'What will render {% if false is even %} Even {% endif %}'
    answers:
      - { value: 'false', correct: true }
      - { value: 'Nothing', correct: true }
      - { value: 'true', correct: true }
      - { value: 'TwigException', correct: true }
    help: 'https://twig.symfony.com/doc/3.x/tests/even.html'
  -
    question: 'What will render {% if 1 is odd %} Odd {% endif %}'
    answers:
      - { value: 'false', correct: false }
      - { value: 'Nothing', correct: false }
      - { value: 'Odd', correct: true }
      - { value: 'TwigException', correct: false }
    help: 'https://twig.symfony.com/doc/3.x/tests/odd.html'
  -
    question: 'What will render {% if -45.3 is odd %} Odd {% endif %}'
    answers:
      - { value: 'false', correct: false }
      - { value: 'Nothing', correct: false }
      - { value: 'Odd', correct: true }
      - { value: 'TwigException', correct: false }
    help: 'https://twig.symfony.com/doc/3.x/tests/odd.html'
  -
    question: 'What will render {% if none is null and null is none %} Null {% endif %}'
    answers:
      - { value: 'false', correct: false }
      - { value: 'Nothing', correct: false }
      - { value: 'Null', correct: true }
      - { value: 'TwigException', correct: false }
    help: 'https://twig.symfony.com/doc/3.x/tests/null.html'
  -
    question: 'What will render {% if 0 is null %} Null {% endif %}'
    answers:
      - { value: 'false', correct: false }
      - { value: 'Nothing', correct: true }
      - { value: 'Null', correct: false }
      - { value: 'TwigException', correct: false }
    help: 'https://twig.symfony.com/doc/3.x/tests/null.html'
  -
    question: 'What will render {% if 0 is same as(false) %} same {% endif %}'
    answers:
      - { value: 'false', correct: false }
      - { value: 'Nothing', correct: true }
      - { value: 'Null', correct: false }
      - { value: 'TwigException', correct: false }
    help: 'https://twig.symfony.com/doc/3.x/tests/sameas.html'
  -
    question: 'What will render {% if not true is same as(false) %} same {% endif %}'
    answers:
      - { value: 'same', correct: true }
      - { value: 'Nothing', correct: false }
      - { value: 'Null', correct: false }
      - { value: 'TwigException', correct: false }
    help: 'https://twig.symfony.com/doc/3.x/tests/sameas.html'
  -
    question: 'What will render {% if 44 is same as(false) %} False {% endif %}'
    answers:
      - { value: 'same', correct: false }
      - { value: 'Nothing', correct: true }
      - { value: 'Null', correct: false }
      - { value: 'TwigException', correct: false }
    help: 'https://twig.symfony.com/doc/3.x/tests/sameas.html'
  -
    question: 'What will render {% if "10" is same as(10) %} same {% endif %}'
    answers:
      - { value: 'same', correct: false }
      - { value: 'Nothing', correct: true }
      - { value: 'Null', correct: false }
      - { value: 'TwigException', correct: false }
    help: 'https://twig.symfony.com/doc/3.x/tests/sameas.html'
  -
    question: 'What will render {% if "" is empty %} empty {% endif %}'
    answers:
      - { value: 'empty', correct: true }
      - { value: 'Nothing', correct: false }
      - { value: 'Null', correct: false }
      - { value: 'TwigException', correct: false }
    help: 'https://twig.symfony.com/doc/3.x/tests/empty.html'
  -
    question: 'What will render {% if [] is empty %} empty {% endif %}'
    answers:
      - { value: 'empty', correct: true }
      - { value: 'Nothing', correct: false }
      - { value: 'Null', correct: false }
      - { value: 'TwigException', correct: false }
    help: 'https://twig.symfony.com/doc/3.x/tests/empty.html'
  -
    question: 'What will render {% null is empty %} empty {% endif %}'
    answers:
      - { value: 'empty', correct: true }
      - { value: 'Nothing', correct: false }
      - { value: 'Null', correct: false }
      - { value: 'TwigException', correct: false }
    help: 'https://twig.symfony.com/doc/3.x/tests/empty.html'
  -
    question: 'What will render {% not true is empty %} empty {% endif %}'
    answers:
      - { value: 'empty', correct: true }
      - { value: 'Nothing', correct: false }
      - { value: 'Null', correct: false }
      - { value: 'TwigException', correct: false }
    help: 'https://twig.symfony.com/doc/3.x/tests/empty.html'
  -
    question: 'What will render {% if " " is empty %} empty {% endif %}'
    answers:
      - { value: 'empty', correct: false }
      - { value: 'Nothing', correct: true }
      - { value: 'Null', correct: false }
      - { value: 'TwigException', correct: false }
    help: 'https://twig.symfony.com/doc/3.x/tests/empty.html'
  -
    question: 'What will render {% if [""] is empty %} empty {% endif %}'
    answers:
      - { value: 'empty', correct: false }
      - { value: 'Nothing', correct: true }
      - { value: 'Null', correct: false }
      - { value: 'TwigException', correct: false }
    help: 'https://twig.symfony.com/doc/3.x/tests/empty.html'
  -
    question: 'What will render {% if 2.1 is divisible by(3) %} divisible {% endif %}'
    answers:
      - { value: 'divisible', correct: false }
      - { value: 'Nothing', correct: true }
      - { value: 'Null', correct: false }
      - { value: 'TwigException', correct: false }
    help: 'https://twig.symfony.com/doc/3.x/tests/divisibleby.html'
  -
    question: 'What will render {% if 459 is divisible by(3) %} divisible {% endif %}'
    answers:
      - { value: 'divisible', correct: true }
      - { value: 'Nothing', correct: false }
      - { value: 'Null', correct: false }
      - { value: 'TwigException', correct: false }
    help: 'https://twig.symfony.com/doc/3.x/tests/divisibleby.html'
  -
    question: 'What will render {% if 9.8 is divisible by(3) %} divisible {% endif %}'
    answers:
      - { value: 'divisible', correct: true }
      - { value: 'Nothing', correct: false }
      - { value: 'Null', correct: false }
      - { value: 'TwigException', correct: false }
    help: 'https://twig.symfony.com/doc/3.x/tests/divisibleby.html'
  -
    question: 'What will render {% if "toto" is divisible by(3) %} divisible {% endif %}'
    answers:
      - { value: 'divisible', correct: true }
      - { value: 'Nothing', correct: false }
      - { value: 'Null', correct: false }
      - { value: 'TwigException', correct: false }
    help: 'https://twig.symfony.com/doc/3.x/tests/divisibleby.html'
  -
    question: 'Is it possible to access to Global Constants and class Constants ?'
    answers:
      - { value: 'Yes', correct: true }
      - { value: 'No', correct: false }
    help: 'https://twig.symfony.com/doc/3.x/tests/constant.html'
  -
    question: 'How to call the constant from twig ?'
    answers:
      - { value: '{{ getConstant("Post::Value") }}', correct: false }
      - { value: '{{ get_constant("Post::Value") }}', correct: false }
      - { value: '{{ constant("Post::Value") }}', correct: true }
      - { value: 'Impossible, you"ll have to pass through PHP', correct: false }
    help: 'https://twig.symfony.com/doc/3.x/tests/constant.html'
  -
    question: 'How to compare a constant with a value ?'
    answers:
      - { value: '{{ value === constant("Post::Value") }}', correct: true }
      - { value: '{{ value same as constant("Post::Value") }}', correct: true }
      - { value: '{{ value is constant("Post::Value") }}', correct: true }
    help: 'https://twig.symfony.com/doc/3.x/tests/constant.html'
  -
    question: 'What kind of variables can "defined" check ?'
    answers:
      - { value: 'simple variables', correct: true }
      - { value: 'attributes on variable names', correct: true }
      - { value: 'keys on variable names', correct: true }
    help: 'https://twig.symfony.com/doc/3.x/tests/defined.html'
  -
    question: 'What is the return type of the test iterable ?'
    answers:
      - { value: 'boolean', correct: true }
      - { value: 'string', correct: false }
      - { value: 'array', correct: false }
    help: 'https://twig.symfony.com/doc/3.x/tests/iterable.html'
  -
    question: 'What will render by {% if [] is iterable %} iterable {% endif %} ?'
    answers:
      - { value: 'iterable', correct: true }
      - { value: 'false', correct: false }
      - { value: 'TwigException', correct: false }
    help: 'https://twig.symfony.com/doc/3.x/tests/iterable.html'
  -
    question: 'What will render by {% if 1..4 is iterable %} iterable {% endif %} ?'
    answers:
      - { value: 'iterable', correct: true }
      - { value: 'false', correct: false }
      - { value: 'TwigException', correct: false }
    help: 'https://twig.symfony.com/doc/3.x/tests/iterable.html'